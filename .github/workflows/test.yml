name: Build YTLitePlusEXTRA IPA (Not For Sideloading)
on:
  workflow_dispatch:
    inputs:
      ipa_url:
        description: "URL to the decrypted IPA file"
        default: ""
        required: true
        type: string

      tweak_version:
        description: "YTLite Version (You can type manually from YTLite Releases)"
        default: "5.2b3"
        required: true
        type: string

      display_name:
        description: "App Name (Optional)"
        default: "YouTube"
        required: true
        type: string

      bundle_id:
        description: "BundleID (Optional)"
        default: "com.google.ios.youtube"
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build YTLitePlusEXTRA IPA
    runs-on: macos-latest
    permissions:
      contents: write

    steps:
      - name: Clone This Repository
        uses: actions/checkout@v5
        with:
          path: main
          submodules: recursive

      - name: Hide Sensitive Inputs
        uses: levibostian/action-hide-sensitive-inputs@v1
        with:
          exclude_inputs: bundle_id,display_name,tweak_version
          
      - name: Download and Validate IPA
        run: |
          wget "${{ inputs.ipa_url }}" --no-verbose -O ${{ github.workspace }}/youtube.ipa

          file_type=$(file --mime-type -b ${{ github.workspace }}/youtube.ipa)

          if [[ "$file_type" != "application/x-ios-app" && "$file_type" != "application/zip" ]]; then
            echo "::error::Validation failed: The downloaded file is not a valid IPA. Detected type: $file_type."
            exit 1
          fi

      - name: Install Dependencies
        run: brew install make ldid

      - name: Set PATH environment variable
        run: echo "$(brew --prefix make)/libexec/gnubin" >> $GITHUB_PATH

      - name: Cache Theos
        id: theos
        uses: actions/cache@v4.2.4
        env:
          cache-name: theos_cache_8ae109d
        with:
          path: theos/
          key: ${{ env.cache-name }}
          restore-keys: ${{ env.cache-name }}

      - name: Install Theos
        if: ${{ steps.theos.outputs.cache-hit != 'true' }}
        uses: actions/checkout@v5
        with:
          repository: theos/theos
          ref: 8ae109d91df472dce495c1652183ff40d9fbef24
          path: ${{ github.workspace }}/theos
          submodules: recursive

      - name: Download iOS SDK
        if: ${{ steps.theos.outputs.cache-hit != 'true' }}
        run: |
          git clone --quiet -n --depth=1 --filter=tree:0 https://github.com/xybp888/iOS-SDKs.git
          cd iOS-SDKs
          git sparse-checkout set --no-cone iPhoneOS18.6.sdk
          git checkout
          mv *.sdk $THEOS/sdks
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Install cyan
        run: pipx install --force https://github.com/asdfzxcvbn/pyzule-rw/archive/main.zip

      - name: Download YTLite
        run: |
          deb_url="https://github.com/dayanch96/YTLite/releases/download/v${{ inputs.tweak_version }}/com.dvntm.ytlite_${{ inputs.tweak_version }}_iphoneos-arm.deb"
          wget "$deb_url" --no-verbose -O ${{ github.workspace }}/ytlite.deb

      - name: Clone Open in YouTube (Safari Extension)
        run: |
          git clone --quiet -n --depth=1 --filter=tree:0 https://github.com/BillyCurtis/OpenYouTubeSafariExtension.git
          cd OpenYouTubeSafariExtension
          git sparse-checkout set --no-cone OpenYouTubeSafariExtension.appex
          git checkout
          mv *.appex ${{ github.workspace }}

      - name: Clone YouTubeHeader
        run: |
          if [ -d "$THEOS/include/YouTubeHeader" ]; then
            echo "YouTubeHeader exists. Pulling latest changes..."
            cd $THEOS/include/YouTubeHeader
            git pull
          else
            echo "YouTubeHeader does not exist. Cloning repository..."
            cd $THEOS/include
            git clone --quiet --depth=1 https://github.com/PoomSmart/YouTubeHeader.git
            echo "Copying YouTubeHeader to YTHeaders..."
            rm -rf "$THEOS/include/YTHeaders"
            cp -r "$THEOS/include/YouTubeHeader" "$THEOS/include/YTHeaders"
          fi
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Clone PSHeader
        run: |
          if [ -d "$THEOS/include/PSHeader" ]; then
            echo "PSHeader exists. Pulling latest changes..."
            cd $THEOS/include/PSHeader
            git pull
          else
            echo "PSHeader does not exist. Cloning repository..."
            cd $THEOS/include
            git clone --quiet --depth=1 https://github.com/PoomSmart/PSHeader.git
          fi
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Clone YouPiP
        run: |
         if [ -d "${{ github.workspace }}/YouPiP" ]; then
            echo "YouPiP exists. Pulling latest changes..."
            cd ${{ github.workspace }}/YouPiP
            git pull
          else
            echo "YouPiP does not exist. Cloning repository..."
            cd ${{ github.workspace }}
            git clone --quiet --depth=1 https://github.com/PoomSmart/YouPiP.git
          fi

      - name: Clone YTUHD
        uses: actions/checkout@v5
        with:
          repository: PoomSmart/YTUHD
          ref: 0f59b38817d554ab692a0053456319847a6ab1a1
          path: ${{ github.workspace }}/YTUHD
          submodules: recursive

      - name: Clone Return-YouTube-Dislikes
        run: |
         if [ -d "${{ github.workspace }}/Return-YouTube-Dislikes" ]; then
            echo "Return-YouTube-Dislikes exists. Pulling latest changes..."
            cd ${{ github.workspace }}/Return-YouTube-Dislikes
            git pull
          else
            echo "Return-YouTube-Dislikes does not exist. Cloning repository..."
            cd ${{ github.workspace }}
            git clone --quiet --depth=1 https://github.com/PoomSmart/Return-YouTube-Dislikes.git
          fi

      - name: Clone YouGroupSettings
        run: |
         if [ -d "${{ github.workspace }}/YouGroupSettings" ]; then
            echo "YouGroupSettings exists. Pulling latest changes..."
            cd ${{ github.workspace }}/YouGroupSettings
            git pull
          else
            echo "YouGroupSettings does not exist. Cloning repository..."
            cd ${{ github.workspace }}
            git clone --quiet --depth=1 https://github.com/PoomSmart/YouGroupSettings.git
          fi

      - name: Clone YTVideoOverlay
        run: |
         if [ -d "${{ github.workspace }}/YTVideoOverlay" ]; then
            echo "YTVideoOverlay exists. Pulling latest changes..."
            cd ${{ github.workspace }}/YTVideoOverlay
            git pull
          else
            echo "YTVideoOverlay does not exist. Cloning repository..."
            cd ${{ github.workspace }}
            git clone --quiet --depth=1 https://github.com/PoomSmart/YTVideoOverlay.git
          fi

      - name: Clone NoYTPremium
        run: |
         if [ -d "${{ github.workspace }}/NoYTPremium" ]; then
            echo "NoYTPremium exists. Pulling latest changes..."
            cd ${{ github.workspace }}/NoYTPremium
            git pull
          else
            echo "NoYTPremium does not exist. Cloning repository..."
            cd ${{ github.workspace }}
            git clone --quiet --depth=1 https://github.com/PoomSmart/NoYTPremium.git
          fi
          
      - name: Clone YTABConfig
        run: |
         if [ -d "${{ github.workspace }}/YTABConfig" ]; then
            echo "YTABConfig exists. Pulling latest changes..."
            cd ${{ github.workspace }}/YTABConfig
            git pull
          else
            echo "YTABConfig does not exist. Cloning repository..."
            cd ${{ github.workspace }}
            git clone --quiet --depth=1 https://github.com/PoomSmart/YTABConfig.git
          fi
                  
      - name: Clone YouQuality
        run: |
         if [ -d "${{ github.workspace }}/YouQuality" ]; then
            echo "YouQuality exists. Pulling latest changes..."
            cd ${{ github.workspace }}/YouQuality
            git pull
          else
            echo "YouQuality does not exist. Cloning repository..."
            cd ${{ github.workspace }}
            git clone --quiet --depth=1 https://github.com/PoomSmart/YouQuality.git
          fi

      - name: Clone YouSpeed
        run: |
         if [ -d "${{ github.workspace }}/YouSpeed" ]; then
            echo "YouSpeed exists. Pulling latest changes..."
            cd ${{ github.workspace }}/YouSpeed
            git pull
          else
            echo "YouSpeed does not exist. Cloning repository..."
            cd ${{ github.workspace }}
            git clone --quiet --depth=1 https://github.com/PoomSmart/YouSpeed.git
          fi

      - name: Clone DontEatMyContent
        run: |
         if [ -d "${{ github.workspace }}/DontEatMyContent" ]; then
            echo "DontEatMyContent exists. Pulling latest changes..."
            cd ${{ github.workspace }}/DontEatMyContent
            git pull
          else
            echo "DontEatMyContent does not exist. Cloning repository..."
            cd ${{ github.workspace }}
            git clone --quiet --depth=1 https://github.com/therealFoxster/DontEatMyContent.git
          fi

      - name: Clone IAmYouTube
        run: |
         if [ -d "${{ github.workspace }}/IAmYouTube" ]; then
            echo "IAmYouTube exists. Pulling latest changes..."
            cd ${{ github.workspace }}/IAmYouTube
            git pull
          else
            echo "IAmYouTube does not exist. Cloning repository..."
            cd ${{ github.workspace }}
            git clone --quiet --depth=1 https://github.com/PoomSmart/IAmYouTube.git
          fi 

      - name: Clone YouMute
        run: |
         if [ -d "${{ github.workspace }}/YouMute" ]; then
            echo "YouMute exists. Pulling latest changes..."
            cd ${{ github.workspace }}/YouMute
            git pull
          else
            echo "YouMute does not exist. Cloning repository..."
            cd ${{ github.workspace }}
            git clone --quiet --depth=1 https://github.com/PoomSmart/YouMute.git
          fi

      - name: Clone YTDarker
        run: |
         if [ -d "${{ github.workspace }}/YTDarker" ]; then
            echo "YTDarker exists. Pulling latest changes..."
            cd ${{ github.workspace }}/YTDarker
            git pull
          else
            echo "YTDarker does not exist. Cloning repository..."
            cd ${{ github.workspace }}
            git clone --quiet --depth=1 https://github.com/PoomSmart/YTDarker.git
          fi

      - name: Clone YouTube-X
        run: |
         if [ -d "${{ github.workspace }}/YouTube-X" ]; then
            echo "YouTube-X exists. Pulling latest changes..."
            cd ${{ github.workspace }}/YouTube-X
            git pull
          else
            echo "YouTube-X does not exist. Cloning repository..."
            cd ${{ github.workspace }}
            git clone --quiet --depth=1 https://github.com/PoomSmart/YouTube-X.git
          fi

      - name: Clone YTABGoodies
        run: |
         if [ -d "${{ github.workspace }}/YTABGoodies" ]; then
            echo "YTABGoodies exists. Pulling latest changes..."
            cd ${{ github.workspace }}/YTABGoodies
            git pull
          else
            echo "YTABGoodies does not exist. Cloning repository..."
            cd ${{ github.workspace }}
            git clone --quiet --depth=1 https://github.com/PoomSmart/YTABGoodies.git
          fi

      - name: Clone YouTimeStamp
        run: |
         if [ -d "${{ github.workspace }}/YouTimeStamp" ]; then
            echo "YouTimeStamp exists. Pulling latest changes..."
            cd ${{ github.workspace }}/YouTimeStamp
            git pull
          else
            echo "YouTimeStamp does not exist. Cloning repository..."
            cd ${{ github.workspace }}
            git clone --quiet --depth=1 https://github.com/Tonwalter888/YouTimeStamp.git
          fi

      - name: Clone YouLoop
        run: |
         if [ -d "${{ github.workspace }}/YouLoop" ]; then
            echo "YouLoop exists. Pulling latest changes..."
            cd ${{ github.workspace }}/YouLoop
            git pull
          else
            echo "YouLoop does not exist. Cloning repository..."
            cd ${{ github.workspace }}
            git clone --quiet --depth=1 https://github.com/Tonwalter888/YouLoop.git
          fi
        
      - name: Build YouPiP
        run: |
          cd ${{ github.workspace }}/YouPiP
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youpip.deb
        env:
          THEOS: ${{ github.workspace }}/theos    

      - name: Build YTUHD
        run: |
          cd ${{ github.workspace }}/YTUHD
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ytuhd.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build Return-YouTube-Dislikes
        run: |
          cd ${{ github.workspace }}/Return-YouTube-Dislikes
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ryd.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouGroupSettings
        run: |
          cd ${{ github.workspace }}/YouGroupSettings
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ygs.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YTVideoOverlay
        run: |
          cd ${{ github.workspace }}/YTVideoOverlay
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ytvo.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build NoYTPremium
        run: |
          cd ${{ github.workspace }}/NoYTPremium
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/nopremium.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YTABConfig
        run: |
          cd ${{ github.workspace }}/YTABConfig
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/abconfig.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouQuality
        run: |
          cd ${{ github.workspace }}/YouQuality
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youqual.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouSpeed
        run: |
          cd ${{ github.workspace }}/YouSpeed
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youspeed.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build DontEatMyContent
        run: |
          cd ${{ github.workspace }}/DontEatMyContent
          make clean package DEBUG=0 FINALPACKAGE=1 
          mv packages/*.deb ${{ github.workspace }}/demc.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build IAmYouTube
        run: |
          cd ${{ github.workspace }}/IAmYouTube
          make clean package DEBUG=0 FINALPACKAGE=1 
          mv packages/*.deb ${{ github.workspace }}/imyt.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouMute
        run: |
          cd ${{ github.workspace }}/YouMute
          make clean package DEBUG=0 FINALPACKAGE=1 
          mv packages/*.deb ${{ github.workspace }}/ym.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YTDarker
        run: |
          cd ${{ github.workspace }}/YTDarker
          make clean package DEBUG=0 FINALPACKAGE=1 
          mv packages/*.deb ${{ github.workspace }}/ytdark.deb
        env:
          THEOS: ${{ github.workspace }}/theos 

      - name: Build YouTube-X
        run: |
          cd ${{ github.workspace }}/YouTube-X
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ytx.deb
        env:
          THEOS: ${{ github.workspace }}/theos    

      - name: Build YTABGoodies
        run: |
          cd ${{ github.workspace }}/YTABGoodies
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ytgoodab.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouTimeStamp
        run: |
          cd ${{ github.workspace }}/YouTimeStamp
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youts.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouLoop
        run: |
          cd ${{ github.workspace }}/YouLoop
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youloop.deb
        env:
          THEOS: ${{ github.workspace }}/theos   
  
      - name: Inject tweaks into IPA
        run: |
          tweaks="ytlite.deb OpenYouTubeSafariExtension.appex"

          for f in *.deb; do
            if [ -f "$f" ]; then
              tweaks="$tweaks $f"
            fi
          done

          cyan -i youtube.ipa -o YTLitePlusEXTRA_Not-For-Sideloading_${{ inputs.tweak_version }}.ipa -uwef $tweaks -n "${{ inputs.display_name }}" -b ${{ inputs.bundle_id }}

      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v2.3.3
        with:
          tag_name: ytliteplusextra-notforsideloading${{ github.run_number }}
          name: YTLitePlusEXTRA_Not-For-Sideloading v${{ inputs.tweak_version }} (${{ github.run_number }})
          files: YTLitePlusEXTRA_Not-For-Sideloading_${{ inputs.tweak_version }}.ipa
          draft: true

      - name: Output Release URL
        run: |
          echo "::notice::Release available at: https://github.com/${{ github.repository }}/releases"
