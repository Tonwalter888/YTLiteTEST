name: Build TrollFools/Cyan files
on:
  workflow_dispatch:
    inputs:
      create_cyan:
        description: "Build .cyan file"
        type: boolean
        required: true
        default: true

      create_tf:
        description: "Build .zip for TrollFools"
        type: boolean
        required: true
        default: true

      tweak_version:
        description: "YTLite Version (You can enter the version manually from YTLite releases or leave default.)"
        default: "5.2b3"
        required: true
        type: string

      display_name:
        description: "App Name (Optional)"
        default: "YouTube"
        required: true
        type: string

      bundle_id:
        description: "BundleID (Optional)"
        default: "com.google.ios.youtube"
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: build
    runs-on: macos-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Main
        uses: actions/checkout@v5
        with:
          path: main
          submodules: recursive

      - name: Check Inputs
        if: ${{ !inputs.create_cyan && !inputs.create_tf }}
        run: |
          echo "No output format selected."
          exit 0

      - name: Install Dependencies
        run: brew install make ldid dpkg swiftlint

      - name: Set PATH Environment Variable
        run: echo "$(brew --prefix make)/libexec/gnubin" >> $GITHUB_PATH

      - name: Install Theos
        uses: actions/checkout@v5
        with:
          repository: theos/theos
          path: ${{ github.workspace }}/theos
          submodules: recursive

      - name: Download iOS SDK
        run: |
          git clone --quiet -n --depth=1 --filter=tree:0 https://github.com/xybp888/iOS-SDKs.git
          cd iOS-SDKs
          git sparse-checkout set --no-cone iPhoneOS18.6.sdk
          git checkout
          mv *.sdk $THEOS/sdks
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Install tbd
        run: |
          cd /usr/local/bin
          wget --no-verbose https://github.com/inoahdev/tbd/releases/download/2.2/tbd-mac
          mv tbd-mac tbd
          chmod +x tbd

      - name: Install cyan
        if: ${{ inputs.create_cyan }}
        run: pipx install --force https://github.com/asdfzxcvbn/pyzule-rw/archive/main.zip

      - name: Download YTLite
        run: |
          deb_url="https://github.com/dayanch96/YTLite/releases/download/v${{ inputs.tweak_version }}/com.dvntm.ytlite_${{ inputs.tweak_version }}_iphoneos-arm64.deb"
          wget "$deb_url" --no-verbose -O ${{ github.workspace }}/ytlite.deb

      - name: Clone Open in YouTube (Safari Extension)
        if: ${{ inputs.create_cyan }}
        run: |
          git clone --quiet -n --depth=1 --filter=tree:0 https://github.com/BillyCurtis/OpenYouTubeSafariExtension.git
          cd OpenYouTubeSafariExtension
          git sparse-checkout set --no-cone OpenYouTubeSafariExtension.appex
          git checkout
          mv *.appex ${{ github.workspace }}

      - name: Clone YouTubeHeader
        run: |
          cd $THEOS/include
          git clone --quiet --depth=1 https://github.com/PoomSmart/YouTubeHeader.git
          cp -r "$THEOS/include/YouTubeHeader" "$THEOS/include/YTHeaders"
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Clone PSHeader
        run: |
           cd $THEOS/include
           git clone --quiet --depth=1 https://github.com/PoomSmart/PSHeader.git
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Clone YouPiP
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 https://github.com/PoomSmart/YouPiP.git

      - name: Clone YTUHD
        uses: actions/checkout@v5
        with:
          repository: PoomSmart/YTUHD
          ref: 0f59b38817d554ab692a0053456319847a6ab1a1
          path: ${{ github.workspace }}/YTUHD

      - name: Clone Return-YouTube-Dislikes
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 https://github.com/PoomSmart/Return-YouTube-Dislikes.git

      - name: Clone YouGroupSettings
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 https://github.com/PoomSmart/YouGroupSettings.git

      - name: Clone YouQuality
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 https://github.com/PoomSmart/YouQuality.git

      - name: Clone YTVideoOverlay
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 https://github.com/PoomSmart/YTVideoOverlay.git

      - name: Clone DontEatMyContent
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 --recurse-submodules https://github.com/therealFoxster/DontEatMyContent.git

      - name: Clone YTABConfig
        run: |
           cd ${{ github.workspace }}
           git clone --quiet --depth=1 https://github.com/PoomSmart/YTABConfig.git

      - name: Clone YouSpeed
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 https://github.com/PoomSmart/YouSpeed.git

      - name: Clone IAmYouTube
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 https://github.com/PoomSmart/IAmYouTube.git

      - name: Clone YouMute
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 https://github.com/PoomSmart/YouMute.git

      - name: Clone YTABGoodies
        run: |
           cd ${{ github.workspace }}
           git clone --quiet --depth=1 https://github.com/PoomSmart/YTABGoodies.git

      - name: Clone YouTimeStamp
        run: |
          cd ${{ github.workspace }}
          git clone --quiet --depth=1 https://github.com/Tonwalter888/YouTimeStamp.git
    
      - name: Clone YouLoop
        run: |
           cd ${{ github.workspace }}
           git clone --quiet --depth=1 https://github.com/Tonwalter888/YouLoop.git

      - name: Clone Alderis
        run: |
           cd ${{ github.workspace }}
           git clone --quiet --depth=1 https://github.com/hbang/Alderis.git

      - name: Clone YouSlider
        run: |
           cd ${{ github.workspace }}
           git clone --quiet --depth=1 https://github.com/PoomSmart/YouSlider.git

      - name: Clone YouChooseQuality
        run: |
           cd ${{ github.workspace }}
           git clone --quiet --depth=1 https://github.com/PoomSmart/YouChooseQuality.git

      - name: Clone YTSilentVote
        run: |
           cd ${{ github.workspace }}
           git clone --quiet --depth=1 https://github.com/PoomSmart/YTSilentVote.git

      - name: Build YouPiP
        run: |
          cd ${{ github.workspace }}/YouPiP
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youpip.deb
        env:
          THEOS: ${{ github.workspace }}/theos    

      - name: Build YTUHD
        run: |
          cd ${{ github.workspace }}/YTUHD
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ytuhd.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build Return-YouTube-Dislikes
        run: |
          cd ${{ github.workspace }}/Return-YouTube-Dislikes
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ryd.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouGroupSettings
        run: |
          cd ${{ github.workspace }}/YouGroupSettings
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ygs.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YTVideoOverlay
        run: |
          cd ${{ github.workspace }}/YTVideoOverlay
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ytvo.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YTABConfig
        run: |
          cd ${{ github.workspace }}/YTABConfig
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ytabconfig.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouQuality
        run: |
          cd ${{ github.workspace }}/YouQuality
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youquality.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouSpeed
        run: |
          cd ${{ github.workspace }}/YouSpeed
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youspeed.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build DontEatMyContent
        run: |
          cd ${{ github.workspace }}/DontEatMyContent
          make clean package DEBUG=0 FINALPACKAGE=1 
          mv packages/*.deb ${{ github.workspace }}/demc.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build IAmYouTube
        run: |
          cd ${{ github.workspace }}/IAmYouTube
          make clean package DEBUG=0 FINALPACKAGE=1 
          mv packages/*.deb ${{ github.workspace }}/imyt.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouMute
        run: |
          cd ${{ github.workspace }}/YouMute
          make clean package DEBUG=0 FINALPACKAGE=1 
          mv packages/*.deb ${{ github.workspace }}/ym.deb
        env:
          THEOS: ${{ github.workspace }}/theos 

      - name: Build YTABGoodies
        run: |
          cd ${{ github.workspace }}/YTABGoodies
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ytgoodab.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouTimeStamp
        run: |
          cd ${{ github.workspace }}/YouTimeStamp
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youts.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouLoop
        run: |
          cd ${{ github.workspace }}/YouLoop
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youloop.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouSlider
        run: |
          cd ${{ github.workspace }}/YouSlider
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youslider.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build Alderis
        run: |
          cd ${{ github.workspace }}/Alderis
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/alderis.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YouChooseQuality
        run: |
          cd ${{ github.workspace }}/YouChooseQuality
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/youchoose.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Build YTSilentVote
        run: |
          cd ${{ github.workspace }}/YTSilentVote
          make clean package DEBUG=0 FINALPACKAGE=1
          mv packages/*.deb ${{ github.workspace }}/ytnovote.deb
        env:
          THEOS: ${{ github.workspace }}/theos

      - name: Generate .cyan File
        if: ${{ inputs.create_cyan }}
        run: |
          tweaks="ytlite.deb OpenYouTubeSafariExtension.appex"

          for deb in *.deb; do
            if [ -f "$deb" ]; then
              tweaks="$tweaks $deb"
            fi
          done

          cgen -uwef $tweaks -n "${{ inputs.display_name }}" -b ${{ inputs.bundle_id }} -o Cyan_YTLitePlusEXTRA_v${{ inputs.tweak_version }}.cyan

      - name: Generate .zip File for TrollFools
        if: ${{ inputs.create_tf }}
        run: |
          mkdir -p tf

          for f in *.deb; do
            if [ -f "$f" ]; then
              echo "Extracting $f..."
              mkdir -p tmp_deb
              dpkg-deb -x "$f" tmp_deb
              find tmp_deb -type f -name "*.dylib" -exec cp -R {} tf/ \;
              find tmp_deb -type d -name "*.bundle" -exec cp -R {} tf/ \;
              rm -rf tmp_deb
            fi
          done

          echo "Zipping..."
          cd tf
          zip -r "../TrollFools_YTLitePlusEXTRA_v${{ inputs.tweak_version }}.zip" .
          cd ..
          rm -rf tf

      - name: Set Output File List
        run: |
          files=""
          if [ "${{ inputs.create_cyan }}" = "true" ]; then
            files="${files}Cyan_YTLitePlusEXTRA_v${{ inputs.tweak_version }}.cyan"$'\n'
          fi
          if [ "${{ inputs.create_tf }}" = "true" ]; then
            files="${files}TrollFools_YTLitePlusEXTRA_v${{ inputs.tweak_version }}.zip"$'\n'
          fi
          echo -e "files<<EOF" >> $GITHUB_OUTPUT
          echo -e "$files" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v2.3.3
        with:
          tag_name: ytliteplusextra-cyants${{ github.run_number }}
          name: YTLitePlusEXTRA_v${{ inputs.tweak_version }}_Cyan_TrollFools (${{ github.run_number }})
          files: ${{ steps.filelist.outputs.files }}
          draft: true

      - name: Output Release URL
        run: |
          echo "::notice::Release available at: https://github.com/${{ github.repository }}/releases"
